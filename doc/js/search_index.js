var search_data = {"index":{"searchIndex":["marc21format","find()","get()","get_defined_indicators()","get_indicator()","get_indicators()","get_subfield()","get_subfields()","get_tag()","get_tags_with_indicators()","get_tags_without_indicators()","get_undefined_indicators()","new()","subfield_repeatable?()"],"longSearchIndex":["marc21format","marc21format#find()","marc21format#get()","marc21format#get_defined_indicators()","marc21format#get_indicator()","marc21format#get_indicators()","marc21format#get_subfield()","marc21format#get_subfields()","marc21format#get_tag()","marc21format#get_tags_with_indicators()","marc21format#get_tags_without_indicators()","marc21format#get_undefined_indicators()","marc21format::new()","marc21format#subfield_repeatable?()"],"info":[["MARC21Format","","MARC21Format.html","","<p>Access the MARC21 format documentation\nwww.loc.gov/marc/bibliographic/ecbdlist.html\n<p>Simplifies the creation …\n"],["find","MARC21Format","MARC21Format.html#method-i-find","( str )",""],["get","MARC21Format","MARC21Format.html#method-i-get","( syntax )",""],["get_defined_indicators","MARC21Format","MARC21Format.html#method-i-get_defined_indicators","()","<p>Returns a hash with all tags and only their defined indicator positions.\n"],["get_indicator","MARC21Format","MARC21Format.html#method-i-get_indicator","( tag_and_indicator )","<p>Example return format:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;4 - HTTP&quot;</span>\n</pre>\n"],["get_indicators","MARC21Format","MARC21Format.html#method-i-get_indicators","( tag )",""],["get_subfield","MARC21Format","MARC21Format.html#method-i-get_subfield","( tag_and_subfield )","<p>Example return format:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;$b - Access number (R)&quot;</span>\n</pre>\n"],["get_subfields","MARC21Format","MARC21Format.html#method-i-get_subfields","( tag )","<p>Returns all subfields of a certain tag.\n<p>Example return format:\n\n<pre>{&quot;856 - ELECTRONIC LOCATION AND ACCESS (R)&quot;=&gt; ...</pre>\n"],["get_tag","MARC21Format","MARC21Format.html#method-i-get_tag","( tag )","<p>Example return format:\n\n<pre>{&quot;856 - ELECTRONIC LOCATION AND ACCESS (R)&quot;=&gt;\n{&quot;First - Access method&quot;=&gt;\n [&quot;# - ...</pre>\n"],["get_tags_with_indicators","MARC21Format","MARC21Format.html#method-i-get_tags_with_indicators","()","<p>Example return:\n\n<pre>&quot;856 - ELECTRONIC LOCATION AND ACCESS (R)&quot;=&gt;\n{&quot;First - Access method&quot;=&gt;\n [&quot;# - No information ...</pre>\n"],["get_tags_without_indicators","MARC21Format","MARC21Format.html#method-i-get_tags_without_indicators","()","<p>Returns a hash with all tags that do not have any indicators.\n"],["get_undefined_indicators","MARC21Format","MARC21Format.html#method-i-get_undefined_indicators","()","<p>Returns a hash with all tags concerned and their undefined indicator\npositions.\n<p>Example return format …\n"],["new","MARC21Format","MARC21Format.html#method-c-new","( file = '' )",""],["subfield_repeatable?","MARC21Format","MARC21Format.html#method-i-subfield_repeatable-3F","( tag_and_subfield )","<p>Returns\n<p><code>true</code> if subfield is repeatable\n<p><code>false</code> if subfield ist not repeatable\n"]]}}